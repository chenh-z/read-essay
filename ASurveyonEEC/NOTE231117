A Survey on EEC
2 Emerging Computing Paradigms and Evaluation Criterions
新型计算范式和评估方案
address massive data computation -> propose computing paradigms
处理大量数据计算->提出计算范式
common place: computing huge amount of data &&  storage tasks from heterogeneous tasks
相同点：计算大量数据&&存储异构设备的任务
difference: TC OS level, other three on virtualization and containerization solutions
不同点：透明计算分布在操作系统层级，其他三种专注于虚拟化和集中化解决方案
2.1 Transparent Computing
      透明计算
Reason of been proposed: decouple software(e.g OS) from the heterogeneous hardware of IoT devices
被提出的原因：可以从硬件异构化的物联网设备中解构软件
Purpose: 1)serve users in an 'transparent' way-- Devices can choose devices from servers on demand without considering the details of provision of this services.
特点：1）以一种" 透明“的方式为用户服务，即设备可以按需从服务器选择服务而不需要考虑提供服务的细节
Characteristic:
特性：
1)Working in a client-server mode, TC intergrates the distributed devices to one system across the network. The systems provides services according to capabilities of devices and the conditions of the network. The server side provide elastic services and management of centralized resource
    以客户端=服务器模式工作。TC通过网络整合资源为一个系统。这个系统根据设备可用性和网络状况提供服务。服务器端提供弹性服务和中心化资源管理。
2)An on-demand service loading and execution architecture: It's bulit by TC to spilt the software from hardware of heterogeneous client devices， which empower clients devices to ecexute cross-platform services via  networks from remote servers
   一种按需加载服务和执行结构：它由TC建立，旨在将异构客户端设备的软硬件分离， 这推动了客户端设备通过网络从远程服务器执行跨平台服务的能力。
3)Execution in a block-streaming way: when users request for a service, only the related code of this services will be loaded and executed, instead of lhe whole software.
  以一种块流方式执行：当用户请求服务的时候，只加载和执行服务相关的代码，而不是整个软件。
Figure 1: one typical implementation of TC
useful figure 1 in cite 173
2.5  Discussion of the Similarities and Differences
     关于相同点和不同点的讨论
表1：
位置：TC-终端设备和附近设备 MEC-基站和附近设备 Fog-路由路径上的设备 Cloudlet-附近微云 Cloud-中央云
虚拟化：TC-MetaOS MEC&&Fog-VM和容器 微云和云-VM
研究重点：TC-跨平台和按需服务等 MEC&&Fog-上行链路计算卸载和下行链路缓存等 微云-计算卸载和虚拟机管理等 云-工作流程调度和虚拟机管理等
正文：
Motivation: TC-address the heterogeneities of end-devices users, and support different OS and across-platform applications. Fog,MEC,Cloudlet- aiming to execute data in proximity to end-devices to reduce response delay, improving the efficent of network.
动机：TC-解决IoT中各种终端用户的异构性、支持不同操作系统和跨平台应用软件。Fog,MEC,微云-旨在终端设备附近处理数据，以减少响应延迟，提高用户体验和网络效率。
Security: TC-using computation capabilities of end-devices and edge-servers to provide safe service to IoT devices. Fog,MEC,Cloudlet- proterting computation environment of edge-servers, and offloading safe burdens from end-devices to edge-servers. 
安全：TC-利用终端设备和边缘服务器的计算能力为IoT设备提供安全服务。Fog,MEC,微云-保护边缘服务器的计算环境，将安全负担从终端设备卸载到边缘服务器。
2.6  Evaluation Criteria
       评判标准
The full benefits of the aforementioned emerging computing paradigms are leveraged on some
common performance criteria for investigating the architecture and the optimization algorithms
of these networks
利用上述新兴评价范式的优点，用一些相同的性能评价标准研究网络架构和优化算法
Criterion:
标准：
1.Needs of supporting heterogeneity of resources: It needs to consider the capabilitied of computation and storage on diffirent access nodes of edge-network to design computation architeture and optimization algorithm.
   支持资源的异质性的需求：需要考虑到网络边缘不同访问节点和终端用户在计算和存储能力上的异质性，设计计算架构和优化算法。
2. Stringnet QoS requirement in emerging computation paradigms: improve data transmission rate while reduce lantancy of data delivery
  新兴计算范式中的严格服务质量要求：提高数据传输率的同时降低数据传输延迟。
3. Need of elastic scalability: Emerging computing paradigms need to satisfy the end-users' request in low latency, high data transmission rate and high energy effiency. Meanwhile, it's necessary for these paradigms and corresponding algorithms to have the ability in adapt the change of network scale.
    弹性可扩展性的需求：需要新兴计算范式满足物联网环境下大量终端用户对低延迟、高数据传输率和高能效的需求。同时，这些范式和相应算法还需要拥有适应网络规模变化的能力。
4. Whether computing paradigms support mobility:  Mainly about the influence of perfomance of communication system by movement of vehicles in IoV. Frequently changing channel should be seriously considered. 
   计算范式是否支持移动性：主要是车联网中车辆的移动影响通信系统的性能，特别是频繁变化的信道需要被慎重考虑。
5.The need of federation and interoperability: It needs to design good data and control interface, achieving interoperability between diffirent level providers and architecture in the condition of edge servers which have geographically distributed deployment on a wide scale and provide for different owners.
   对联邦和互操作性的需求：需要设计良好的数据和控制接口，在广泛的地理区域部署的边缘服务器和提供不同所有者的条件下实现不同级别的提供商和架构的互操作性。
3 Computation Offloading for Emerging Commputing Paradigms
   新兴计算范式的计算卸载
Computation offloading has benn regarded as a promising solution, which is used to liberate mobile devices from limited computation ability and energy provision, and coordinate the resourses in end-edge-cloud computation paradigms.
计算卸载(2)被视为一种有前景的解决方案， 用于从有限的计算能力和能源供应中解放移动设备，有效协调端-边-云编排计算范式中的计算资源。
In this chapter, the existing essays are divided into three caregorizes: minimize energy consumption, minimize delay, and jointly optimizion in energy consumption and delay.
本章根据现有文献的目标将它们分为三类：最小化能源消耗、最小化延迟、能源消耗和延迟的联合优化。
